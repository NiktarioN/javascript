// У вас есть:
// function getFriendlyNumbers(start, end) {}

// Необходимо реализовать функцию которая подсчитывает дружественные числа в заданном диапазоне;
// Сигнатура функции - getFriendlyNumbers(start, end);
// start - начало диапазона;
// end - конец диапазона;

// Функция должна возвращать массив из пар дружественных чисел.
// Например:

// Для диапазона от 1 до 300 функция должна вернуть [[220, 284]]
// Для диапазона от 1 до 100 функция должна вернуть пустой массив. []
// Для диапазона от 284 до 500 функция должна вернуть пустой массив. []
// Для диапазона от 1 до 1211 функция должна вернуть [[220, 284], [1184, 1210]]
// И так далее по диапазонам.

// В случае, если переданы не правильные аргументы (неправильный тип данных (только числа!), start > end, отрицательный диапазон, дробные числа), функция должна вернуть false.
// Числа должны находится в правильном порядке. [284, 220] - неправильно. Пары дружественных чисел не должны повторяться. [[220, 284], [284, 220]] - неправильно.


function getFriendlyNumbers(start, end) {
	if (isNaN(start) || isNaN(end) || start > end || start <= 0 || end <= 0 || Number.isInteger(start) || Number.isInteger(end)) {
		return false;
	} else {

	}
	return []
}

module.exports = {
	firstName: 'Name',
	secondName: 'Surname',
	task: getFriendlyNumbers
}