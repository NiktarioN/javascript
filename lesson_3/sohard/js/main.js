'use strict';

// Task 1
let x1 = 5;
console.log(x1++);

// Ответ 5. Если ++ или — ставить перед переменной, то значение сначала будет старое, а уже после действия новое

// Task 2
console.log([] + false - null + true);

// Ответ NaN. Сначала мы складываем пустой массив с false. Когда мы что-то складываем с пустым массивом это превращается в строку, поэтому после первой операции будет просто строка "false". Дальше мы строку вычитаем с null и это уже не математическая операция и получаем NaN

// Task 3 
let y3 = 1,
	x3 = y3 = 2;
console.log(x3);

// Ответ 2. Потому что знак "=" присваивает значение. Здесь как раз сначала y присваивается значение 2, а потом х присваивается значение у

// Task 4
console.log([] + 1 + 2);

// Ответ 12. Как и в Task 2 складываем пустой массив с числом и получается строка, а уже потом строка складывается с числом и получается все равно строка

// Task 5
console.log("1" [0]);

// Ответ 1. Т.к. мы можем разбить строку на символы, то [] нам в этом отлично помогает. Здесь символ "1" как раз имеет 0 индекс и поэтому выводится. Если бы мы в скобках написали [1], то вывело бы undefined, т.к. в строке больше нет символов

// Task 6
console.log(2 && 1 && null && 0 && undefined)

// Ответ NULL. && запинается на правде, а || на лжи. Дальше они не идут. Поэтому здесь 2 && 1 возвращает true, а уже потом оператор && запинается на null, т.к. null всегда false, выводит его и останавливается

// Task 7
let a, b;
console.log(!!(a && b) == (a && b))

// Ответ False. Оператор !! приводит выражение к булевому типу. Выражение (a && b) это просто выражение. Поэтому разница между ними есть

// Task 8
console.log(null || 2 && 3 || 4);

// Ответ 3. Оператор || всегда ищет правду. null || 2 выдает 2, т.к. 2 это всегда true. 2 && 3 вернет true, т.к. нет false и значение станет 3. 3 || 4 вернет 3, т.к. это первый true 

// Task 9 
let m = [1, 2, 3],
	n = [1, 2, 3];

console.log(m == n);

// Ответ false. Это одинаковые по значению массивы, но они все равно разные

// Task 10
console.log(+"Infinity");

//  Ответ Infinity. 

// Task 11
console.log("ёжик" > "яблоко");

//  Ответ true. Все дело в регистре и в Unicode. 

// Task 12
console.log(0 || "" || 2 || undefined || true || falsе);

// Ответ 2